@import url(/style/reset.css);
@import url(/style/theme.css);
@import url(/style/base.css);

/* input 컴포넌트 */
.form-input{
  --spacing: 10px;
  --border-color: var(--gray-500);
  --radius: 3px;
  border-bottom: 1px solid #fff;

  display: flex;
  flex-flow: row nowrap;
  gap: var(--spacing);
  align-items: center; /*수직방향으로 정렬하기 -> flex 속성 중 하나*/

  label{
    white-space: nowrap; /*텍스트가 길어서 넘어가더라도 자동 줄바꿈 일어나지 말라고*/
  }

  input{
    flex-grow:1;
    /* border: 1px solid var(--border-color) */
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    padding: 1px 1px 1px 8px;
    height: 24px;
    block-size: 24px;
    width: 100%  /* 이걸 줘야만, 부모의 width를 상속받을 수 있어. 이걸 안 쓰고 flex-grow로 늘려버리면 부모컨테이너는 가만히 있고 야이만 늘어나. */
  }

  input:focus{
    outline: 0;
  }

  &:focus-within{
    border-bottom-color:red;
    /* 자식 중에 누군가 focus를 받으면 이 부모컨테이너 하단의 border의 색상을 red로 만들어라. */
  }
}

/* button 컴포넌트 */
.button {
  --bg-color: var(--orange-200);
  --color: var(--white);
  --radius: 3px;

  border:0;
  padding: 16px 10px;
  background-color: var(--bg-color);
  color: var(--color);
  border-radius: var(--radius);
  white-space: nowrap;

  &.search-button{
    background-color: #000;
    padding: 0 10px;
  }
 }

/* 검색 폼 레이아웃 스타일링 */
.search-group{
  background: yellow;
  margin: 50px;
  background-image: linear-gradient(to bottom, #ccc, #fff);
  border: 1px solid #aaa;
  border-bottom-color: #fff;
  padding: 15px 25px 10px; /*패딩 확인해보기 */
  border-radius: 15px 15px 0 0;
  display: flex;
  flex-flow: row nowrap;
  gap: 10px;

  .form-input{
    flex-grow: 1;
  }

  [class*="fab"]{
    padding-right: 0.25em;
    padding-inline-end: 0.25em;
  }

  input, button {
    height: 30px;
    block-size: 30px;
  }

  button{
    font-size: 0.875rem;
  }
}






.search-group{
  display: flex;
  flex-flow: row nowrap;
}

.form-input{
  margin-right: 8px;
}

.button{
  border: 0;
  background-color: #000;
  color: #fff;
  border-radius: 5px;
}

/* input {width:100%} -> 부모 컨테이너의 width값을 받아들임. 아니면 줄였을때 input만 오버플로우됨. . */